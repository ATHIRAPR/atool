<?php
//ユーティリティ関数

/*
function get_upload_dir() {
	global $UPLOAD_DIR;
	return $UPLOAD_DIR;
}

function get_publish_dir() {
	global $PUBLISH_DIR;
	return $PUBLISH_DIR;
}
*/


//指定したidのファイルが格納されるディレクトリの相対パス文字列を取得する
function get_file_stored_dir($file_id) {
	return sprintf("/%05d/%d", floor(($file_id-1) / 100) * 100, $file_id);
}


//指定したディレクトリ内に存在するファイルの数を返す
function get_stored_file_num($store_dir) {

	$pdf_num = 0;
	$hdl = opendir($store_dir);
	while($pdf_file = readdir($hdl)) {
		if (!is_dir($pdf_file)) {
			//ディレクトリ内のpdfファイルの数をチェック
			$pdf_num++;
		}
	}
	closedir($hdl);

	return $pdf_num;
}


//ipアドレスか、ホスト名で検証機チェックを行う
function is_from_test($remote_addr, $remote_host) {
	global $TEST_WEB_SERVER;

	if ($remote_addr === $TEST_WEB_SERVER) {
		//検証機とIPアドレスが一致
		return true;
	} else if ($remote_host === $TEST_WEB_SERVER) {
		//検証機とホスト名が一致
		return true;
	}
	//アクセス元は検証機ではない
	return false;
}


//pdfダウンロードログを出力する
function log_pdf_download($log_file_path, $user_id, $file_nm, $msg = "") {
	//ログファイルを開く
	$hdl = fopen($log_file_path, "a+");
	if ($hdl) {
		//ダウンロードログを追記する
		flock($hdl, LOCK_EX);
		fprintf($hdl, "%s, %s, %s, $msg\n", date("Y/m/d H:i:s"), $user_id, $file_nm, $msg);	//現在日時、ユーザID、ファイル名を書き込む
		flock($hdl, LOCK_UN);
		fclose($hdl);
		return true;
	}
	return false;
}


//指定したディレクトリ内にあるファイルを全て削除したのち、指定ディレクトリを削除する
function delete_dir($path){

    $strDir = opendir($path);
    while($strFile = readdir($strDir)){
        if($strFile != '.' && $strFile != '..'){  //ディレクトリでない場合のみ
            unlink($path.'/'.$strFile);
        }
    }
    rmdir($path);
}

//文書種別名とスタンプフラグから、書種別名の表示用文字列を返します
function get_doctype_stamp_string($doctype_nm, $stamp_flg, $sep_str="") {
	$stamp_options = array("0" => "", "1" => "（DL押印）", "2" => "（ユーザ配布禁止押印）");
	return $doctype_nm.$sep_str.$stamp_options[$stamp_flg];
}

?>