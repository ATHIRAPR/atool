<?php

require_once("include/init.php.inc");
require_once("include/smarty.php.inc");
require_once("include/db.php.inc");
require_once("include/auth.php.inc");
require_once("include/util.php.inc");
require_once("include/pdftotext.php.inc");
include_once('include/extract_kw.php.inc');

//選択された左メニュー項目
$smarty->assign("func_info", array("extract_kw" => 1));

// ファイル管理権限が無い場合は、エラーにする
if ($role_info['file_role_flg'] != 1) {
    // エラーメッセージ表示
    show_error_page(array("ファイル管理者の権限がありません"), "manage.php", "トップページへ戻る");
    exit;
}

// PDF
$pdf = $_FILES['pdf_document'];

//エラーページを表示する無名関数
$show_error = function (array $messages) {
	show_error_page($messages, 'extract_keyword_file.php', 'キーワード抽出ファイル選択へ戻る');
	exit;
};

// エラーコード確認
$error_message = null;
foreach ($pdf['error'] as $index => $value) {
	if ($value !== UPLOAD_ERR_OK && ($value !== UPLOAD_ERR_NO_FILE || ($value === UPLOAD_ERR_NO_FILE && strlen($pdf['name'][$index]) !== 0)))
		$error_message[] = $pdf['name'][$index]."[$value]";
}

// エラー確認
if (!is_null($error_message)) {
	$show_error(array_merge(array('ファイルのアップロードに失敗しました'), $error_message));
}

// キーワード取得
$model_number_keywords = array();
$free_keywords = array();

//型番プレフィックス文字列をテキストファイルから配列に読み込む
$model_prefix_array = file($MODEL_PREFIX_FILE, FILE_SKIP_EMPTY_LINES|FILE_IGNORE_NEW_LINES);
if (!$model_prefix_array) {
	$show_error(array_merge(array('型番検索リストの読み込みに失敗しました'), $error_message));
}

//型番除外文字列をテキストファイルから配列に読み込む
$model_exclude_array = file($MODEL_EXCLUDE_FILE, FILE_SKIP_EMPTY_LINES|FILE_IGNORE_NEW_LINES);
if (!$model_exclude_array) {
	$show_error(array_merge(array('型番除外リストの読み込みに失敗しました'), $error_message));
}

foreach ($pdf['tmp_name'] as $index => $filename) {
	if ($pdf['error'][$index] !== UPLOAD_ERR_NO_FILE) {
		// 型番PDFテキスト抽出
		$pdf_model_number = pdftotext($filename, 1, 1);
		if ($pdf_model_number === false)
			//$show_error(array('PDFテキストの抽出に失敗しました', $pdf['name'][$index]));
			$show_error(array('キーワードの抽出に失敗しました', $pdf['name'][$index]));

		//テキストに含まれる文字列" TYPE "を"-"に置き換える
		$pdf_model_number = str_replace(" TYPE ", "-", $pdf_model_number);

		// 型番キーワード抽出
		$model_number_matches = null;
		if (preg_match_all('/[a-zA-Z0-9\\-\\/]+/', $pdf_model_number, $model_number_matches) === false)
			$show_error(array('キーワードの抽出に失敗しました', $pdf['name'][$index]));
		$model_number_keywords = array_merge($model_number_keywords, $model_number_matches[0]);


		// フリーキーワードPDFテキスト抽出
		$pdf_free_keyword = pdftotext($filename);
		if ($pdf_free_keyword === false)
			$show_error(array('PDFテキストの抽出に失敗しました', $pdf['name'][$index]));

		//テキストに含まれる文字列" TYPE "を"-"に置き換える
		$pdf_free_keyword = str_replace(" TYPE ", "-", $pdf_free_keyword);

		// フリーキーワード抽出
		$free_keyword_matches = null;
		if (preg_match_all('/[a-zA-Z0-9\\-\\/]+/', $pdf_free_keyword, $free_keyword_matches) === false)
			//$show_error(array('キーワードの抽出に失敗しました', $pdf['name'][$index]));
			$show_error(array('キーワードの抽出に失敗しました', $pdf['name'][$index]));
		$free_keywords = array_merge($free_keywords, $free_keyword_matches[0]);
	}
}

//型番キーワード、フリーキーワードの型番検索(ナンバー分割)処理を行う
$model_number_keywords = get_model_number($model_number_keywords, $model_prefix_array, $model_exclude_array);
$free_keywords = get_model_number($free_keywords, $model_prefix_array, $model_exclude_array);

//フリーキーワードに含まれるキーワードから、型番キーワードに含まれるものを取り除く
foreach($free_keywords as $idx => $keyword) {
	if (in_array($keyword, $model_number_keywords)) {
		unset($free_keywords[$idx]);
	}
}


// 重複を取り除く
$model_number_keywords = array_unique($model_number_keywords);
$free_keywords = array_unique($free_keywords);


// 型番最大文字列長取得
$max_model_number_length = array_reduce($model_number_keywords, function($carry, $item) {
	$length = strlen($item);
	return $carry < $length ? $length : $carry;
}, 0);

// フリーキーワード最大文字列長取得
$max_free_keyword_length = array_reduce($free_keywords, function($carry, $item) {
	$length = strlen($item);
	return $carry < $length ? $length : $carry;
}, 0);

// キーワード情報を取得する無名関数
$keyword_info = function ($max_keyword_length, &$keyword_length, &$keyword_column_count) {
	$calc_length = function ($value) {
		// 少数第一位
		return ((int)($value * 10)) / 10;
	};

	$keyword_length = $calc_length($max_keyword_length / 2) + 2.5;
	$keyword_column_count = floor(44 / $keyword_length);

	// 最大4列
	if ($keyword_column_count < 1)
		$keyword_column_count = 1;
	else if ($keyword_column_count >= 4)
		$keyword_column_count = 4;

	$keyword_length = $calc_length((44 - $keyword_column_count) / $keyword_column_count);
};

// 型番キーワード情報
$model_number_keyword_length = 0;
$model_number_keyword_column_count = 0;
$keyword_info($max_model_number_length, $model_number_keyword_length, $model_number_keyword_column_count);

// フリーキーワード情報
$free_keyword_length = 0;
$free_keyword_column_count = 0;
$keyword_info($max_free_keyword_length, $free_keyword_length, $free_keyword_column_count);

// 昇順ソート
sort($model_number_keywords);
sort($free_keywords);

//抽出対象ワード無しのメッセージ
if (count($model_number_keywords) == 0 && count($free_keywords) == 0) {
	$msg_array = array("抽出対象となるワードは検出されませんでした。");
	show_template_page("extract_keyword.tpl.html", $msg_array);
	exit;
}

$smarty->assign('model_number_keywords', $model_number_keywords);
$smarty->assign('free_keywords', $free_keywords);
$smarty->assign('free_keyword_column_count', $free_keyword_column_count);
$smarty->assign('free_keyword_length', $free_keyword_length);
$smarty->assign('model_number_keyword_column_count', $model_number_keyword_column_count);
$smarty->assign('model_number_keyword_length', $model_number_keyword_length);

show_template_page("extract_keyword.tpl.html");
exit;

?>
